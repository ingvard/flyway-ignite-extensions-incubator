/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: "java"
apply plugin: "pmd"
apply plugin: "checkstyle"
apply plugin: "com.github.spotbugs"

repositories {
    mavenCentral()
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    withSourcesJar()
}

pmd {
    ignoreFailures = false
    consoleOutput = true
    toolVersion = libs.versions.pmdTool.get()

    ruleSets = ["$rootDir/check-rules/pmd-rules.xml"]
    incrementalAnalysis = true
}

checkstyle {
    toolVersion = libs.versions.checkstyleTool.get()
    ignoreFailures = false
    showViolations = true
    maxWarnings = 0
    configFile = file("$rootDir/check-rules/checkstyle-rules.xml")
    configProperties = [
        "checkstyle.header.file"                        : file("$rootDir/check-rules/LICENSE.txt"),
        "org.checkstyle.google.suppressionfilter.config": file("$rootDir/check-rules/checkstyle-suppressions.txt")
    ]
}

tasks.withType(Checkstyle) {
    excludes = ["**/generated-source/**",
                "**/generated/**"]
    reports {
        xml.required = false
        html {
            required = true
            outputLocation = file("$rootDir/build/reports/checkstyle/${project.name}.html")
        }

    }
}

spotbugs {
    toolVersion = libs.versions.spotBugs.get()
    ignoreFailures = false
    showProgress = true
    effort = 'max'
}